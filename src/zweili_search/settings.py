"""Django settings for zweili_search project.

Generated by 'django-admin startproject' using Django 4.2.23.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
import socket
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("SECRET_KEY")
if not SECRET_KEY:
    msg = (
        "SECRET_KEY environment variable is required. "
        "Please set a secure SECRET_KEY environment variable."
    )
    raise ValueError(msg)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv("DEBUG", None)
ZWEILI_SEARCH_DB_DIR = Path(
    os.getenv("ZWEILI_SEARCH_DB_DIR", "/var/lib/zweili_search/")
)
ZWEILI_SEARCH_DOMAIN = os.getenv("ZWEILI_SEARCH_DOMAIN", socket.getfqdn())
ZWEILI_SEARCH_STATIC_ROOT = Path(
    os.getenv("ZWEILI_SEARCH_DB_DIR", "/var/lib/zweili_search/")
)

ALLOWED_HOSTS = [
    "localhost",
    "localhost:8000",
    "127.0.0.1",
    "testserver",  # For Django test client
    socket.getfqdn(),
    socket.gethostname(),
    socket.gethostbyname(socket.gethostname()),
    ZWEILI_SEARCH_DOMAIN,
]

CSRF_TRUSTED_ORIGINS = [f"https://{ZWEILI_SEARCH_DOMAIN}"]

if DEBUG:
    CSRF_TRUSTED_ORIGINS.append("http://localhost:8000")

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "search.apps.SearchConfig",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]


ROOT_URLCONF = "zweili_search.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "zweili_search.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": ZWEILI_SEARCH_DB_DIR.joinpath("db.sqlite3"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": (
            "django.contrib.auth.password_validation."
            "UserAttributeSimilarityValidator"
        ),
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]
AUTH_USER_MODEL = "search.SearchUser"


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "Europe/Zurich"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"
STATIC_ROOT = ZWEILI_SEARCH_STATIC_ROOT.joinpath("static")

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Logging configuration
LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "detailed": {
            "format": "{asctime} [{levelname}] {name} - {message}",
            "style": "{",
        },
        "simple": {
            "format": "[{levelname}] {name} - {message}",
            "style": "{",
        },
    },
    "handlers": {
        "console": {
            "class": "logging.StreamHandler",
            "formatter": "detailed",
        },
        "file": {
            "class": "logging.FileHandler",
            "filename": ZWEILI_SEARCH_DB_DIR.joinpath("meta_search.log"),
            "formatter": "detailed",
        },
    },
    "loggers": {
        "search.meta_search": {
            "handlers": ["console", "file"],
            "level": "INFO",
            "propagate": False,
        },
        "search.views": {
            "handlers": ["console", "file"],
            "level": "INFO",
            "propagate": False,
        },
        "search.bangs": {
            "handlers": ["console", "file"],
            "level": "INFO",
            "propagate": False,
        },
    },
    "root": {
        "handlers": ["console"],
        "level": "WARNING",
    },
}
