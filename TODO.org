* TODOs
** NEXT Implement an env variable for ~SECRET_KEY~

** NEXT Clean the Duckduckgo links

They URLs should point directly to the result site.
At the moment they look like this: ~href="//duckduckgo.com/l/?uddg=https%3A%2F%2Fwiki.nixos.org%2Fwiki%2FPackaging%2FPython&rut=df0696b5e384603bb7999dd83a09a0a74a5aaaa0b09c1bde6092eeea82f4f653"~

** NEXT Display the URL under the title

At the moment I don't know where the link points to.
I would like to see this directly.

** NEXT Get API keys for searchs

- [ ] Google
- [X] Bing
  Doesn't have an API
- [ ] Yandex
- [X] Duckduckgo
  Doesn't have an API

** NEXT Add models

- [X] Bangs
- [X] Users
- [X] Blocklist
- [ ] Results and their weights
- [ ] providers
  I could probably store the API key next to them?
  #+begin_src python
  google = {
    name: "Google",
    url: "https://google.ch",
    api_key: os.environ['GOOGLE_API_KEY']
  }
  #+end_src

** NEXT Implement weights

I want to be able to down-/uprank certain domains.

** NEXT Read ENV files

** NEXT Add derviation for the static files

This way I could remove the collect static step from the startup scripts.

** NEXT Run it as a systemd service

The container is overkill.

** NEXT Can I make the image smaller?

** DONE Implement query functionality
CLOSED: [2025-07-20 Sun 20:15]

Just the basic functionality to get queries.

** DONE Make queries parallel
CLOSED: [2025-07-20 Sun 20:14]

For performance it makes probably the most sense then I request the query against all providers at once.
Otherwise I have to wait longer and longer when I add more search engines.

** DONE Setup Flake
CLOSED: [2025-07-20 Sun 20:15]
** DONE Setup Django project
CLOSED: [2025-07-20 Sun 20:15]

I think Django makes the most sense as I would like to add a login feature and I know that Django provides robust support in this area.
Flask would be totally fine if I wouldn't need to store user settings and therefore requiere a login page.
